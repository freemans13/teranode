worker_processes auto;
worker_rlimit_nofile 65535;

events {
  multi_accept on;
  use epoll;
}

http {
  server_tokens off;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  # Explicitly set resolver to Docker's internal DNS with valid time
  resolver 127.0.0.11 valid=10s ipv6=off;

  proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=asset_cache:10m max_size=512m inactive=60m use_temp_path=off;
  proxy_cache_key "$request_method|$scheme|$proxy_host|$request_uri|$request_body";
  proxy_cache_min_uses 1;
  proxy_cache_lock on;
  proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
  proxy_cache_background_update on;
  proxy_cache_revalidate on;

  # Set timeouts for upstream connections
  proxy_connect_timeout 5s;
  proxy_send_timeout 60s;  # Increased for large request bodies
  proxy_read_timeout 120s; # Increased for large responses

  # Retry connecting to upstream servers
  proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
  proxy_next_upstream_timeout 10s;
  proxy_next_upstream_tries 3;

  log_format cache_log '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'cache_status: $upstream_cache_status '
                        'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

  access_log /dev/stdout cache_log;

  server {
    listen 8000;

    # Use variable to force DNS re-resolution
    set $asset_backend "asset:8090";

    location ~ ^/api/v1/(subtree|subtree_data|block|blocks|header|headers|block_legacy|headers_to_common_ancestor|headers_from_common_ancestor)/([0-9a-fA-F]+)$ {
      proxy_cache asset_cache;
      proxy_cache_valid 200 1m;
      proxy_cache_methods GET;
      proxy_pass http://$asset_backend;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      add_header X-Cache-Status $upstream_cache_status;
      add_header Cache-Control "public, max-age=300";
    }

    location ~ ^/api/v1/(txs|subtree/[0-9a-fA-F]+/txs)$ {
      proxy_pass http://$asset_backend;

      # Explicitly disable caching for this endpoint
      proxy_no_cache 1;
      proxy_cache_bypass 1;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      add_header X-Cache-Status $upstream_cache_status;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
      add_header Pragma "no-cache";
      add_header Expires "0";
    }

    # Block all other requests
    location / {
        return 404;
    }
  }
}
