name: Teranode main tests
on:
  workflow_call

env:
  REPO: teranode
  GO_VERSION: '1.25.2'

permissions:
  contents: read
  pull-requests: read
  id-token: write

jobs:
  go-test:
    name: Go test
    runs-on: teranode-runner
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_ORG }}
          password: ${{ secrets.DOCKER_ORG_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: "false"

      - name: Run Go tests
        run: make test
        continue-on-error: false

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out
          retention-days: 1

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: /tmp/teranode-test-results/test-results.txt
          retention-days: 2

  smoketest:
    name: smoketest
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_ORG }}
          password: ${{ secrets.DOCKER_ORG_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: "false"

      - name: Run Smoke tests
        run: make smoketest
        continue-on-error: false
        env:
          settings_context: ${{ env.SETTINGS_CONTEXT_DEFAULT }}

      - name: Upload smoketest results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoketest-results
          path: /tmp/teranode-test-results/smoketest-results.txt
          retention-days: 2

  sonarqube:
    name: Sonarqube
    runs-on: teranode-runner
    needs: go-test
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage-report

    - name: Run filename check script
      run: |
        ./scripts/check_filenames.sh

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: "false"

    # Re-run golangci-lint separately without exiting on errors and generating a report for use in Sonar
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: --timeout=5m --issues-exit-code=0 --output.checkstyle.path=golangci-lint-report.xml

    # Disable Twingate and Sonar, we will switch to public SonarCloud once code is public
    #- uses: twingate/github-action@4493ffc3806241aa98194a3fa679f874bce013b5
    #  with:
    #    service-key: ${{ secrets.TWINGATE_GH_ACTIONS_SERVICE_KEY }} # Required

    #- name: SonarQube Scan
    #  uses: sonarsource/sonarqube-scan-action@v5
    #  env:
    #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #    SONAR_HOST_URL: https://sonarqube.prod.ubsv.dev
